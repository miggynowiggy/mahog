const description = {
  "id": "variable",
  "seed": "dynamic data type",
  "number": "data type for int and float numbers",
  "string": "data type for character or strings",
  "boolean": "data type for boolean values",
  "stone": "dynamic constant data type",
  "object": "data type that holds a record",
  "num": "typecasting function",
  "str": "typecasting function",
  "bol": "typecasting function",
  "if": "conditional keyword",
  "elif": "conditional keyword",
  "else": "conditional keyword",
  "carve": "function for printing on console",
  "water": "function that takes a user input",
  "cycle": "for-loop keyword",
  "during": "while-loop keyword",
  "skip": "looping control statement, used to proceed to the next iteration",
  "break": "looping control statement, used to force stop a loop",
  "return": "return keyword",
  "trim": "a function that sets the precision of a float number",
  "size": "a function that returns the length of a string or an array",
  "null": "signifies an empty value",
  "void": "used to declare a function with no return value",
  "true": "boolean literal",
  "false": "boolean literal",
  "absorb": "array method for adding an element to an array",
  "insert": "array method for inserting element/s in an array",
  "uproot": "array method for removing an element from an array",
  "atChar": "returns the index of the first occurance of the character",
  "atPos": "Returns the character at specified index",
  "stringLit": "string literal",
  "negaFloatNumLit": "negative float number",
  "floatNumLit": "positive float number",
  "negaNumLit": "negative number",
  "numLit": "positive number",
  "multiLineComment": "mutliline comment",
  "comment": "comment",
  "increment": "unary operator",
  "decrement": "unary operator",
  "negaSign": "negative symbol",
  "addOp": "arithmetic operator",
  "subtractOp": "arithmetic operator",
  "multiplyOp": "arithmetic operator",
  "divideOp": "arithmetic operator",
  "moduloOp": "arithmetic operator",
  "addAssignOp": "arithmetic operator",
  "subtractAssignOp": "arithmetic operator",
  "multiplyAssignOp": "arithmetic operator",
  "divideAssignOp": "arithmetic operator",
  "moduloAssignOp": "arithmetic operator",
  "notEqualOp": "relational operator",
  "equalToOp": "relational operator",
  "greaterThanEqualOp": "relational operator",
  "lessThanEqualOp": "relational operator",
  "assignOnlyOp": "assignment operator",
  "greaterThanOp": "relational operator",
  "lessThanOp": "relational operator",
  "notOp": "logical operator",
  "andOp": "logical operator",
  "orOp": "logical operator",
  "terminator": "terminating symbol",
  "comma": "parameter separator, array element separator, object property seaprator",
  "period": "method access, object property access",
  "colon": "property literal separator",
  "LParen": "grouping symbol",
  "RParen": "grouping symbol",
  "LSqr": "array index access",
  "RSqr": "array index access",
  "LCurl": "block symbol",
  "RCurl": "block symbol",
}

export default description;